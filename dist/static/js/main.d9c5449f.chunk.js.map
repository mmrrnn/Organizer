{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/UpdateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","createProject","getFirestore","authorId","add","firstName","lastName","Date","catch","err","ProjectDetails","handleDelete","e","deleteProject","history","push","isOwner","ownProps","match","params","data","doc","delete","SignIn","email","password","handleChange","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","required","UpdateProject","updateProject","defaultValue","updates","update","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9c5449f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from './../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/\">HOME</NavLink></li>\r\n            <li><NavLink to=\"/create\">NEW PROJECT</NavLink></li>\r\n            <li><a onClick={props.signOut}>LOG OUT</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating yellow purple-text\">{ props.profile.initials }</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">SIGN UP</NavLink></li>\r\n            <li><NavLink to=\"/signin\">LOG IN</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Navbar(props) {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    \r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper purple\">\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = props => {\r\n    const { notifications } = props;\r\n    \r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card card-notifications z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"purple-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        { moment(item.time.toDate()).fromNow() }\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{ project.title }</span>\r\n                <p>Posted By { project.authorFirstName } { project.authorLastName }</p>\r\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            } ) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);\r\n","export const createProject = project => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        })\r\n            .then(() => {\r\n                dispatch({ type: 'CREATE_PROJECT', project });\r\n            }).catch(err => {\r\n                dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('projects').doc(id).delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_PROJECT', id });\r\n            }).catch(err => {\r\n                dispatch({ type: 'DELETE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProject = (id, updates) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        \r\n        firestore.collection('projects').doc(id).update(updates)\r\n            .then(() => {\r\n                dispatch({ type: 'UPDATE_PROJECT', id });\r\n            }).catch(err => {\r\n                dispatch({ type: 'UPDATE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\nimport moment from 'moment';\r\n\r\nclass ProjectDetails extends Component {\r\n    handleDelete = e => {\r\n        const id = this.props.id;\r\n\r\n        this.props.deleteProject(id);\r\n        // czemu to sie nie usuwa, dopiero po odswiezeniu \r\n        // this.forceUpdate();    -------     gowno daje\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { id, project, auth } = this.props;\r\n        var isOwner = null;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        if (project && auth) isOwner = (project.authorId === auth.uid)\r\n\r\n        if (project) {\r\n            return (\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        {isOwner && (<a className=\"btn-floating project-button right waves-effect waves-light red\" onClick={this.handleDelete}>\r\n                            <i className=\"material-icons\">delete</i>\r\n                        </a>)}\r\n                        <Link to={'/update/' + id} >\r\n                            {isOwner && (<span className=\"btn-floating project-button right waves-effect waves-light purple\">\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </span>)}\r\n                        </Link>\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{project.title}</span>\r\n                            <p>{project.content}</p>\r\n                        </div>\r\n                        <div className=\"card-action lighten-4 grey-text\">\r\n                            <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center\">\r\n                    <p>Loading project ...</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        id,\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteProject: id => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-1 z-depth-0\">Log In</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    } \r\n    \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    } \r\n    \r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid)return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" required onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" required className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: project => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { updateProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass UpdateProject extends Component {\r\n    state = {\r\n        title: this.props.project ? this.props.project.title : null,\r\n        content: this.props.project ? this.props.project.content : null\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const id = this.props.id;\r\n\r\n        this.props.updateProject(id, this.state);\r\n        this.props.history.push('/');\r\n    } \r\n    \r\n    render() {\r\n        const { id, project, auth } = this.props;\r\n        var isOwner = null;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        if (project && auth) isOwner = (project.authorId === auth.uid)\r\n\r\n        if(project){\r\n            return (\r\n                <div className=\"container\">\r\n                    <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                        <h5 className=\"grey-text text-darken-3\">Update Project</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"title\" className=\"active\">Title</label>\r\n                            <input type=\"text\" id=\"title\" onChange={this.handleChange} defaultValue={this.state.title} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"content\" className=\"active\">Project Content</label>\r\n                            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} defaultValue={this.state.content}></textarea>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn purple lighten-1 z-depth-0\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center\">\r\n                    <p>Loading project ...</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        id,\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateProject: (id, updates) => dispatch(updateProject(id, updates))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(UpdateProject);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport UpdateProject from './components/projects/UpdateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <div id=\"page\">\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/update/:id\" component={UpdateProject} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed')\r\n            return {\r\n                ...state, \r\n                authError: 'Login Failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success', state);\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('sign up error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created: ', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error', action.err);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('Deleted: ', action.id);\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('Delete project error', action.err);\r\n            return state;\r\n        case 'UPDATE_PROJECT':\r\n            console.log('Updated: ', action.id);\r\n            return state;\r\n        case 'UPDATE_PROJECT_ERROR':\r\n            console.log('Update project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBx8BynuP8lto1vPMIc5i7gnrNMMHWkfac\",\r\n    authDomain: \"testowa-baza1.firebaseapp.com\",\r\n    databaseURL: \"https://testowa-baza1.firebaseio.com\",\r\n    projectId: \"testowa-baza1\",\r\n    storageBucket: \"testowa-baza1.appspot.com\",\r\n    messagingSenderId: \"473379311436\",\r\n    appId: \"1:473379311436:web:ac13b0b80f1a12ecc889e9\",\r\n    measurementId: \"G-F4WJQQEW0N\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n    reduxFirestore(fbConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n  serviceWorker.unregister();\n})"],"sourceRoot":""}