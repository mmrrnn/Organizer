{"version":3,"sources":["serviceWorker.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/dashboard/SearchBar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/UpdateProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","dispatch","signOut","getState","getFirebase","auth","then","type","profile","className","to","onClick","id","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","SearchBar","onChange","htmlFor","e","target","value","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","searchedText","indexOf","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","useState","setSearchedText","text","createProject","getFirestore","authorId","add","firstName","lastName","Date","catch","err","ownProps","params","data","deleteProject","doc","delete","history","isOwner","push","pathname","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","setEmail","setPassword","onSubmit","preventDefault","signUp","newUser","createUserWithEmailAndPassword","resp","set","setFirstName","setLastName","setTitle","setContent","required","updateProject","updates","update","defaultValue","App","exact","path","component","Dashboard","ProjectDetails","UpdateProject","SignIn","SignUp","CreateProject","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ef42277.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signOut } from './../../store/actions/authActions';\r\n\r\nconst SignedInLinks = ({ profile, signOut }) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/\">HOME</NavLink></li>\r\n            <li><NavLink to=\"/create\">NEW PROJECT</NavLink></li>\r\n            <li><a onClick={signOut}>LOG OUT</a></li>\r\n            <li id=\"initials\"><NavLink to=\"/\" className=\"btn btn-floating white-text\">{profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signOut: () => dispatch(signOut())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = credentials => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">SIGN UP</NavLink></li>\r\n            <li><NavLink to=\"/signin\">LOG IN</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nfunction Navbar({ auth, profile }) {\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    \r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper white\">\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card card-notifications z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\n\r\nexport const SearchBar = ({ onChange }) => {\r\n    return (\r\n        <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Search</label>\r\n            <input type=\"text\" id=\"title\" onChange={e => onChange(e.target.value)} />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{ project.title }</span>\r\n                <p>Posted By { project.authorFirstName } { project.authorLastName }</p>\r\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({ projects, searchedText }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                if (project.title.indexOf(searchedText) !== -1 || project.content.indexOf(searchedText) !== -1) {\r\n                    return (\r\n                        <Link to={'/project/' + project.id} key={project.id} >\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n                return null;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport Notifications from './Notifications';\r\nimport { SearchBar } from './SearchBar';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nconst Dashboard = ({ projects, auth, notifications, firestore }) => {\r\n    const [searchedText, setSearchedText] = useState('');\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <SearchBar onChange={text => setSearchedText(text)} />\r\n                    <ProjectList projects={projects} searchedText={searchedText} />\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","export const createProject = project => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        })\r\n            .then(() => {\r\n                dispatch({ type: 'CREATE_PROJECT', project });\r\n            }).catch(err => {\r\n                dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('projects').doc(id).delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_PROJECT', id });\r\n            }).catch(err => {\r\n                dispatch({ type: 'DELETE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProject = (id, updates) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        \r\n        firestore.collection('projects').doc(id).update(updates)\r\n            .then(() => {\r\n                dispatch({ type: 'UPDATE_PROJECT', id });\r\n            }).catch(err => {\r\n                dispatch({ type: 'UPDATE_PROJECT_ERROR', err });\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport moment from 'moment';\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = ({ id, project, auth, deleteProject, history }) => {\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    var isOwner = null;\r\n    if (project && auth) isOwner = (project.authorId === auth.uid)\r\n\r\n    const handleDelete = () => {\r\n        deleteProject(id);\r\n        history.push('/');\r\n    }\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    {isOwner && (<a className=\"btn-floating project-button right waves-effect waves-light red\" onClick={handleDelete}>\r\n                        <i className=\"material-icons\">delete</i>\r\n                    </a>)}\r\n                    <Link to={{\r\n                        pathname: '/update/' + id,\r\n                        state: {\r\n                            id,\r\n                            project,\r\n                            auth\r\n                        }\r\n                    }}>\r\n                        {isOwner && (<span className=\"btn-floating project-button right waves-effect waves-light green\">\r\n                            <i className=\"material-icons\">edit</i>\r\n                        </span>)}\r\n                    </Link>\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action lighten-4 grey-text\">\r\n                        <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container center\">\r\n            <p>Loading project ...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        id,\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteProject: id => dispatch(deleteProject(id))\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signIn } from '../../store/actions/authActions';\r\n\r\nconst SignIn = ({ authError, auth, signIn }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        signIn({\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    if (auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signIn: creds => dispatch(signIn(creds))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nconst SignUp = ({ auth, authError, signUp }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        signUp({\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName\r\n        })\r\n    }\r\n\r\n    if (auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={e => setFirstName(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={e => setLastName(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\nconst CreateProject = ({ auth, createProject, history }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        createProject({\r\n            title,\r\n            content\r\n        });\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" required onChange={e => setTitle(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" required className=\"materialize-textarea\" onChange={e => setContent(e.target.value)}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.firebase.auth\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createProject: project => dispatch(createProject(project))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { updateProject } from '../../store/actions/projectActions';\r\n\r\nconst UpdateProject = ({ history, location, updateProject }) => {\r\n    const { id, project, auth } = location.state;\r\n    const [title, setTitle] = useState(project.title)\r\n    const [content, setContent] = useState(project.content);\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        updateProject(id, { title, content });\r\n        history.push('/');\r\n    }\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Update Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" className=\"active\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={e => setTitle(e.target.value)} defaultValue={title} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\" className=\"active\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={e => setContent(e.target.value)} defaultValue={content}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Update</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container center\">\r\n            <p>Loading project ...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateProject: (id, updates) => dispatch(updateProject(id, updates))\r\n})\r\n\r\nexport default compose(\r\n    connect(null, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(UpdateProject);","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\nimport UpdateProject from './components/projects/UpdateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n        <Navbar />\r\n        <div id=\"page\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/project/:id\" component={ProjectDetails} />\r\n            <Route path=\"/update/:id\" component={UpdateProject} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/create\" component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed')\r\n            return {\r\n                ...state, \r\n                authError: 'Login Failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success', state);\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('sign up error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created: ', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error', action.err);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('Deleted: ', action.id);\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('Delete project error', action.err);\r\n            return state;\r\n        case 'UPDATE_PROJECT':\r\n            console.log('Updated: ', action.id);\r\n            return state;\r\n        case 'UPDATE_PROJECT_ERROR':\r\n            console.log('Update project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    projects: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBx8BynuP8lto1vPMIc5i7gnrNMMHWkfac\",\r\n    authDomain: \"testowa-baza1.firebaseapp.com\",\r\n    databaseURL: \"https://testowa-baza1.firebaseio.com\",\r\n    projectId: \"testowa-baza1\",\r\n    storageBucket: \"testowa-baza1.appspot.com\",\r\n    messagingSenderId: \"473379311436\",\r\n    appId: \"1:473379311436:web:ac13b0b80f1a12ecc889e9\",\r\n    measurementId: \"G-F4WJQQEW0N\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\r\n    reduxFirestore(fbConfig)\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n  serviceWorker.unregister();\r\n})"],"sourceRoot":""}